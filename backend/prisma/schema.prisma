// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String    @id @default(uuid())
  email       String    @unique
  name        String    @unique
  password    String
  tables      Table[]   // Relacionamento com as tabelas criadas pelo usuário
  isConfirmed Int       @default(0)
  createdAt   DateTime  @default(now())
}

model Table {
  id          Int         @id @default(autoincrement())
  name        String      // Nome da tabela
  user        User        @relation(fields: [userId], references: [id])
  userId      String
  columns     Column[]    // Relacionamento com as colunas da tabela
  rows        Row[]       // Relacionamento com as linhas da tabela
  attachments Attachment[]// Relacionamento com os anexos da tabela
  createdAt   DateTime    @default(now())
}

model Column {
  id        Int      @id @default(autoincrement())
  name      String   // Nome da coluna
  table     Table    @relation(fields: [tableId], references: [id])
  tableId   Int
  createdAt DateTime @default(now())
}

model Row {
  id        Int      @id @default(autoincrement())
  table     Table    @relation(fields: [tableId], references: [id])
  tableId   Int
  data      Json     // Dados de cada célula da linha em formato JSON
  createdAt DateTime @default(now())
}

model Attachment {
  id        Int      @id @default(autoincrement())
  table     Table    @relation(fields: [tableId], references: [id])
  tableId   Int
  url       String   // URL do anexo
  createdAt DateTime @default(now())
}
